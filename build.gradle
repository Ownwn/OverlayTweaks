plugins {
//	kotlin("jvm")
	id("org.polyfrost.multi-version")
	id("org.polyfrost.defaults.repo")
	id("org.polyfrost.defaults.java")
	id("org.polyfrost.defaults.loom")
	id("net.kyori.blossom") version "1.3.2"
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	maven { url = "https://jitpack.io" }
	maven { url = "https://maven.isxander.dev/releases" } // required for yacl
	maven { url = "https://maven.terraformersmc.com/releases" } // required for modmenu
	maven { url = "https://pkgs.dev.azure.com/djtheredstoner/DevAuth/_packaging/public/maven/v1" } // required for oauth
}

loom {
	runs {
		remove server
	}
}

dependencies { // To change the versions see the gradle.properties file
	// Mixin Extras because PGT doesn't include it
	include(implementation(annotationProcessor("io.github.llamalad7:mixinextras-fabric:${mixin_extras_version}")))

	// YACL
	if (mcVersion == 12006)
		modImplementation("dev.isxander:yet-another-config-lib:3.4.2+1.20.5-fabric")
	else if (mcVersion == 12004)
		modImplementation("dev.isxander:yet-another-config-lib:3.4.2+1.20.4-fabric")
	else if (mcVersion = 12001)
		modImplementation("dev.isxander:yet-another-config-lib:3.4.2+1.20.1-fabric")

	// Mod Menu
	if (mcVersion == 12006)
		modImplementation("com.terraformersmc:modmenu:10.0.0-beta.1")
	else if (mcVersion == 12004)
		modImplementation("com.terraformersmc:modmenu:9.2.0-beta.2")
	else if (mcVersion = 12001)
		modImplementation("com.terraformersmc:modmenu:7.2.2")

	// Fabric API. Required for YACL
	if (mcVersion = 12006)
		modImplementation "net.fabricmc.fabric-api:fabric-api:0.98.0+1.20.6"
	else if (mcVersion = 12004)
		modImplementation "net.fabricmc.fabric-api:fabric-api:0.97.0+1.20.4"
	else if (mcVersion = 12001)
		modImplementation "net.fabricmc.fabric-api:fabric-api:0.92.1+1.20.1"

	// DevAuth. Lets us log in with our own Minecraft account. Useful for testing tab features.
	modRuntimeOnly("me.djtheredstoner:DevAuth-fabric:${project.devauth_version}")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}" }
	}
}
